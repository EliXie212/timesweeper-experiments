IDS, = glob_wildcards("bams/sorted/{id}.sorted.bam")

rule all:
    input:
        expand("bams/stats/{id}.stats", id=IDS),
        expand("vcfs/calls/stats/{id}.stats", id=IDS),
        expand("vcfs/merged/ts_merged.{qual}.filtered.calls.vcf.gz", qual=[0,10]),
        expand("vcfs/merged/ts_merged.{qual}.filtered.stats", qual=[0,10]),
        "vcf-multiqc/multiqc_report.html",
        "bam-multiqc/multiqc_report.html"

rule bamstats:
    input:
        "bams/sorted/{id}.sorted.bam"
    output:
        "bams/stats/{id}.stats"
    threads: 1
    shell:
        """
        samtools stats {input} > {output}
        """

rule call_vars_10:
    input:
        "vcfs/raw/{id}.vcf.gz"
    output:
        "vcfs/calls/{id}.10.called.vcf.gz"
    threads: 4
    shell:
        """
        bcftools call -m --threads {threads} {input} | \
        bcftools filter -Oz -o {output} -i '%QUAL>10'
        """

rule call_vars_0:
    input:
        "vcfs/raw/{id}.vcf.gz"
    output:
        "vcfs/calls/{id}.0.called.vcf.gz"
    threads: 4
    shell:
        """
        bcftools call -m --threads {threads} {input} | \
        bcftools filter -Oz -o {output} -i '%QUAL>0'
        """
rule index:
    input:
        "vcfs/calls/{id}.{qual}.called.vcf.gz"
    output:
        "vcfs/calls/{id}.{qual}.called.vcf.gz.csi"
    threads: 2
    shell:
        """
        bcftools index --threads {threads} {input}
        """
    
rule vcfstats:
    input:
        "vcfs/calls/{id}.{qual}.called.vcf.gz"
    output:
        "vcfs/calls/stats/{id}.{qual}.stats"
    shell:
        """
        bcftools stats {input} > {output}
        """

rule merge:
    input:
        vcfs = expand("vcfs/calls/{id}.{{qual}}.called.vcf.gz", id=IDS),
        indexes = expand("vcfs/calls/{id}.{{qual}}.called.vcf.gz.csi", id=IDS),
    output:
        "vcfs/merged/ts_merged.{qual}.calls.vcf.gz"
    threads: workflow.cores
    shell:
        """
        bcftools merge -Oz --threads {threads} --force-samples {input.vcfs} > {output}
        """

rule filter:
    input:
        "vcfs/merged/ts_merged.{qual}.calls.vcf.gz"
    output:
        "vcfs/merged/ts_merged.{qual}.filtered.calls.vcf.gz"
    threads: workflow.cores
    shell:
        """
        bcftools view -Oz -i 'F_MISSING<0.5' {input} > {output}
        """

rule merged_raw_vcfstats:
    input:
        "vcfs/merged/ts_merged.{qual}.calls.vcf.gz"
    output:
        "vcfs/merged/ts_merged.{qual}.calls.stats"
    threads: 8
    shell:
        """
        bcftools stats {input} > {output}
        """

rule filtered_vcfstats:
    input:
        "vcfs/merged/ts_merged.{qual}.filtered.calls.vcf.gz"
    output:
        "vcfs/merged/ts_merged.{qual}.filtered.stats"
    threads: workflow.cores
    shell:
        """
        bcftools stats --threads {threads} {input} > {output}
        """

#rule multiqc:
#    output:
#        "vcf-multiqc/multiqc_report.html",
#        "bam-multiqc/multiqc_report.html"
#    shell:
#        """
#        multiqc vcfs/calls/ -o vcf-multiqc
#        multiqc bams/sorted/ -o bam-multiqc
#        """